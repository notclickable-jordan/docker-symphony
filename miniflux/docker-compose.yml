services:
  backup:
    image: alpine:3.17.2
    container_name: miniflux_backup
    entrypoint: "tail -f /dev/null"
    volumes:
      - db:/var/lib/postgresql/data
      - letsencrypt:/etc/letsencrypt:ro
      - letsencrypt_lib:/var/lib/letsencrypt:ro
    restart: always

  miniflux:
    image: miniflux/miniflux:2.0.42
    container_name: miniflux
    env_file: env.miniflux
    ports:
      - 8050:8080
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    container_name: miniflux_db
    env_file: env.postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s
    volumes:
      - db:/var/lib/postgresql/data

  nginx:
    image: nginx:1.23.3
    container_name: miniflux_nginx
    volumes:
        - ./default.conf:/etc/nginx/conf.d/default.conf
        - letsencrypt:/etc/letsencrypt
        - certbot:/var/www/certbot
    ports:
        - 8051:80
        - 8052:443
    depends_on:
        - miniflux
    restart: always

  letsencrypt:
      image: certbot/certbot:v2.4.0
      container_name: miniflux_letsencrypt
      command: sh -c "certbot certonly --reinstall -v -d miniflux.notclickable.com --webroot --webroot-path /var/www/certbot/ --agree-tos --email jordan@notclickable.com"
      entrypoint: ""
      depends_on:
          - nginx
      environment:
          - TERM=xterm
      volumes:
          - letsencrypt:/etc/letsencrypt
          - certbot:/var/www/certbot
          - letsencrypt_lib:/var/lib/letsencrypt

volumes:
  db:
  certbot:
  letsencrypt:
  letsencrypt_lib: