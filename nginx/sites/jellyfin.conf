upstream jellyfin_backend {
  server jellyfin:8096;
}

server {
  listen 80;
  server_name jellyfin.starbase80.dev;

  access_log /var/log/nginx/jellyfin.starbase80.dev.access.logs;
  error_log /var/log/nginx/jellyfin.starbase80.dev.error.logs;

  location ^~ /.well-known/acme-challenge {
    allow all;
    root /var/www/certbot;
  }

  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;

    proxy_pass http://jellyfin_backend;
    # return 301 https://$host$request_uri;
  }
}

# server {
#   listen 443 ssl http2;
#   listen [::]:443 ssl http2;
#   server_name jellyfin.starbase80.dev;

#   access_log /var/log/nginx/jellyfin.starbase80.dev.access.logs;
#   error_log /var/log/nginx/jellyfin.starbase80.dev.error.logs;

#   ssl_protocols TLSv1.2 TLSv1.3;
#   ssl_ciphers HIGH:!MEDIUM:!LOW:!aNULL:!NULL:!SHA;
#   ssl_prefer_server_ciphers on;
#   ssl_session_cache shared:SSL:10m;
#   ssl_session_tickets off;

#   ssl_certificate /etc/letsencrypt/live/jellyfin.starbase80.dev/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/jellyfin.starbase80.dev/privkey.pem;

#   include /etc/nginx/snippets/authelia-location.conf;

#   location ^~ /.well-known/acme-challenge {
#     allow all;
#     root /var/www/certbot;
#   }

#   location / {
#     include /etc/nginx/snippets/proxy.conf;
#     include /etc/nginx/snippets/authelia-authrequest.conf;

#     proxy_pass http://jellyfin_backend;
#   }
# }