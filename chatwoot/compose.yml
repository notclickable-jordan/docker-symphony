services:
  backup:
    image: alpine:3.17.2
    container_name: chatwoot_backup
    entrypoint: "tail -f /dev/null"
    restart: unless-stopped
    volumes:
      - storage:/app/storage:ro
      - postgres:/var/lib/postgresql/data:ro
      - redis:/data:ro

  rails:
    image: chatwoot/chatwoot:latest
    env_file: chatwoot.env
    volumes:
      - storage:/app/storage
    container_name: chatwoot
    depends_on:
      - postgres
      - redis
    ports:
      - 8290:3000
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']

  sidekiq:
    image: chatwoot/chatwoot:latest
    env_file: chatwoot.env
    volumes:
      - storage:/app/storage
    container_name: chatwoot_sidekiq
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']

  postgres:
    image: postgres:12
    container_name: chatwoot_postgres
    restart: always
    env_file: postgres.env
    ports:
      - 8291:5432
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: chatwoot_redis
    restart: always
    env_file: chatwoot.env
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    volumes:
      - redis:/data
    ports:
      - 8292:6379

volumes:
  storage:
  postgres:
  redis: